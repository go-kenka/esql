// Code generated by esql, DO NOT EDIT.
package sql

import (
	"fmt"
	"github.com/go-kenka/esql"
	"github.com/jmoiron/sqlx"
)

// Client .
type Client struct {
    {{- range $i,$t := .Tables }}
	{{$t.Name | camelCase}} *{{$t.Name}}.{{$t.Name | camelCase}}Client
	{{- end }}
}

// NewClient .
func NewClient(db *sqlx.DB) *Client {
	return &Client{
		{{- range $i,$t := .Tables }}
		{{$t.Name | camelCase}}: {{$t.Name}}.New{{$t.Name | camelCase}}Client(db),
		{{- end }}
	}
}

// Open .
func Open(driverName, dataSourceName string) (*Client, error) {
	switch driverName {
	case esql.MySQL, esql.Postgres, esql.SQLite:
		db, err := sqlx.Open(driverName, dataSourceName)
		if err != nil {
			return nil, err
		}
		return NewClient(db), nil
	default:
		return nil, fmt.Errorf("unsupported driver: %q", driverName)
	}
}
