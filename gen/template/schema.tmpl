// Code generated by esql, DO NOT EDIT.
package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
    {{- range $i,$t := .Tables }}
	// {{$t.Name | camelCase}}Columns holds the columns for the "{{$t.Name}}" table.
	{{$t.Name | camelCase}}Columns = []*schema.Column{
		{{- range $j,$f := $t.Fields }}
			{{- if eq $f.Name "id"}}
			{Name: "{{$f.Name}}", Type: field.{{$f.TypeInfo | dbType}}, Size: {{$f.Size}}, Nullable: {{$f.Nillable}}, Unique: {{$f.Unique}}, Increment: true},
			{{- else -}}
			{{- if eq $f.Default nil}}
			{Name: "{{$f.Name}}", Type: field.{{$f.TypeInfo | dbType}}, Size: {{$f.Size}}, Nullable: {{$f.Nillable}}, Unique: {{$f.Unique}}},
			{{- else -}}
			{{- if isString $f.TypeInfo}}
			{Name: "{{$f.Name}}", Type: field.{{$f.TypeInfo | dbType}}, Size: {{$f.Size}}, Nullable: {{$f.Nillable}}, Unique: {{$f.Unique}}, Default: "{{$f.Default}}"},
			{{- else -}}
			{Name: "{{$f.Name}}", Type: field.{{$f.TypeInfo | dbType}}, Size: {{$f.Size}}, Nullable: {{$f.Nillable}}, Unique: {{$f.Unique}}, Default: {{$f.Default}}},
			{{- end -}}
			{{- end -}}
			{{- end -}}
		{{- end}}
	}
	// {{$t.Name | camelCase}}Table holds the schema information for the "{{$t.Name}}" table.
	{{$t.Name | camelCase}}Table = &schema.Table{
		Name:       "{{$t.Name}}",
		Columns:    {{$t.Name | camelCase}}Columns,
		PrimaryKey: []*schema.Column{ {{$t.Name | camelCase}}Columns[0] },
	}
	{{end}}

	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		{{- range $i,$t := .Tables }}
		{{$t.Name | camelCase}}Table,
		{{- end}}
	}
)

func init() {
	{{- range $i,$t := .Tables }}
	{{$t.Name | camelCase}}Table.Annotation = &entsql.Annotation{
		Table: "{{$t.Name}}",
	}
	{{- end}}
}
